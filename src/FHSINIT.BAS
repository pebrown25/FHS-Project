DECLARE SUB GetCONFIG (CFGNAME$)
DECLARE SUB GetFileDEF ()
DECLARE SUB GetPrintDEF ()
REM $INCLUDE: 'FHSCOMON.BAS'
5 PN$ = " FAMILY HISTORY SYSTEM - FHSINIT - Initialization Program"
  CY$ = " (C) Copyright 1985-1997 by Phillip E. Brown"

   CLS : KEY OFF: FOR I = 1 TO 10: KEY I, "": NEXT I
10 CONFIG.DUR = 2: MO = 0: ENV.SYSMODE = 1
   SYSVAR.PGMNAME = "FHSINIT"
   ENV.PGMNAME = "FHSINIT": ENV.PGMSFX = ".BAS"
   ENV.PDF = " ": ENV.FDF = " "
   WB$ = "ÉÍ»ººÈÍ¼"
   'LSET WB$ = "+-+||+-+"
   DIM ATR(11), FG(11), BG(11), PT$(5), MT$(12)
   REDIM IDataNm$(1), IDataBgn(1)
   CALL DataINIT("INIT"): IF NOT OKAY THEN 900

15 ' Build DEFAULT Color Table
   DEF FNFG (SATTR) = (SATTR MOD 16) - 16 * (SATTR > 127)
   DEF FNBG (SATTR) = (SATTR MOD 128) \ 16
   CALL DataINIT("SCRNATR"): IF NOT OKAY THEN 900
   INPUT #5, X$: FOR I = 0 TO 11: INPUT #5, ATR(I): NEXT I
   DEF SEG = 0
   IF (PEEK(&H410) AND &H30) = &H30 THEN
      INPUT #5, X$: FOR I = 0 TO 11: INPUT #5, ATR(I): NEXT I
   END IF
   FOR I = 0 TO 11
      SATTR = ATR(I): FG(I) = FNFG(SATTR): BG(I) = FNBG(SATTR)
   NEXT I

20 ' Get Configuration Information
   IF ENVIRON$("FHSCURS") = "BIG" THEN LOCATE 1, 1, 0, 1, 8
   IF ENVIRON$("FHSMEM") = "LARGE" THEN ENV.LARGEMEM = -1
   CFGNAME$ = ENVIRON$("FHSCONFG")
   IF CFGNAME$ = "" THEN CFGNAME$ = "FHSCONFG"
   CALL GetCONFIG(CFGNAME$)
   FHSFILE$ = ENVIRON$("FHSFILES")
   IF FHSFILE$ <> "" THEN LSET ENV.FDF = FHSFILE$: SWAP CONFIG.FDF, ENV.FDF
   FHSPRINT$ = ENVIRON$("FHSPRINT")
   IF FHSPRINT$ <> "" THEN LSET ENV.PDF = FHSPRINT$: SWAP CONFIG.PDF, ENV.PDF
   LANG$ = ENVIRON$("FHSLANG"): SL = LEN(LANG$)
   S1 = 0: S2 = INSTR(LANG$, ":"): IF S2 = 0 THEN S2 = SL + 1
   IF S2 - S1 = 4 THEN
      CONFIG.TDF = UCASE$(LEFT$(LANG$, 3))
      CONFIG.SDF = CONFIG.TDF: CONFIG.MDF = CONFIG.TDF
      CONFIG.RDF = CONFIG.TDF
   END IF
   S1 = S2: S2 = INSTR(S1 + 1, LANG$, ":"): IF S2 = 0 THEN S2 = SL + 1
   IF S2 - S1 = 4 THEN CONFIG.TDF = UCASE$(MID$(LANG$, S1 + 1, 3))
   S1 = S2: S2 = INSTR(S1 + 1, LANG$, ":"): IF S2 = 0 THEN S2 = SL + 1
   IF S2 - S1 = 4 THEN CONFIG.SDF = UCASE$(MID$(LANG$, S1 + 1, 3))
   S1 = S2: S2 = INSTR(S1 + 1, LANG$, ":"): IF S2 = 0 THEN S2 = SL + 1
   IF S2 - S1 = 4 THEN CONFIG.MDF = UCASE$(MID$(LANG$, S1 + 1, 3))
   S1 = S2: S2 = INSTR(S1 + 1, LANG$, ":"): IF S2 = 0 THEN S2 = SL + 1
   IF S2 - S1 = 4 THEN CONFIG.RDF = UCASE$(MID$(LANG$, S1 + 1, 3))

   DFMT$ = ENVIRON$("FHSDATE")
   IF DFMT$ <> "" THEN
      IF DFMT$ = "MM-DD-YYYY" THEN CONFIG.DFM = "1": CONFIG.VER = -1
      IF DFMT$ = "DD.MM.YYYY" THEN CONFIG.DFM = "2": CONFIG.VER = -1
      IF DFMT$ = "YYYY.MM.DD" THEN CONFIG.DFM = "3": CONFIG.VER = -1
   END IF
   BPLACE$ = SPACE$(22): DPLACE$ = BPLACE$: MPLACE$ = BPLACE$
   PLINE$ = SPACE$(255): CLINE$ = PLINE$
   WKF$ = SPACE$(14)
   NFMT$ = SPACE$(52): BNAME$ = NFMT$: RELATION$ = SPACE$(12): C$ = " "

30 ' Build File Name Tables
   CALL DataINIT("FILES"): IF NOT OKAY THEN 900
   ENV.DSNCNT = 14
   REDIM FTYPE$(ENV.DSNCNT + 1), FT$(ENV.DSNCNT + 1)
   FOR X = 0 TO ENV.DSNCNT
      FTYPE$(X) = SPACE$(8): FT$(X) = SPACE$(12)
      INPUT #5, Z, Z1$, Z2$
      LSET FTYPE$(X) = Z1$: LSET FT$(X) = Z2$
   NEXT X
   CALL GetFileDEF

40 ' Build Printer DEF
   CALL GetPrintDEF
   IF PDFHdr.FTYPE = "PDF" THEN GOTO 100
   CALL DataINIT("PRINTER"): IF NOT OKAY THEN 900
   INPUT #5, PDFPrinter.NAME, PDFPrinter.REF
   INPUT #5, PDFPrinter.CODES, PDFPrinter.SYMBOLS, PDFPrinter.FORMS
   INPUT #5, PDFForms.NAME, PDFForms.REF
   INPUT #5, PDFForms.FWIDTH, PDFForms.FLENGTH
   INPUT #5, PDFForms.TMARGIN, PDFForms.BMARGIN
   INPUT #5, PDFForms.IMARGIN, PDFForms.OMARGIN
   INPUT #5, PDFForms.OPTIONS
   INPUT #5, PDFSymbols.NAME, PDFSymbols.REF
   INPUT #5, PDFSymbols.SET1, PDFSymbols.SET2, PDFSymbols.SET3
   INPUT #5, PDFCodes.NAME, PDFCodes.REF
   PDFCodes.INIT = CHR$(2) + CHR$(27) + CHR$(64)
   PDFCodes.FONT1 = CHR$(1) + CHR$(15)
   PDFCodes.FONT2 = CHR$(0): PDFCodes.FONT3 = CHR$(0)
   PDFCodes.LINEFEED = CHR$(1) + CHR$(13)
   PDFCodes.FORMFEED = CHR$(1) + CHR$(12)
   PDFCodes.RESET = CHR$(0)
   REDIM PSETUPS(1) AS PrintSetupREC, PRINTERS(1) AS PrintDefREC
   REDIM PCODES(1) AS PrintCodesREC, PSYMBOLS(1) AS PrintSymbolREC
   REDIM PFORMS(1) AS PrintFormsREC
   PSETUPS(1) = PDFSetup: PRINTERS(1) = PDFPrinter: PCODES(1) = PDFCodes
   PSYMBOLS(1) = PDFSymbols: PFORMS(1) = PDFForms
   CALL PDFGetSet("DEFAULT")
   'ENV.PRINT = 1: ENV.FORMS = 1: ENV.CODES = 1: ENV.SYMBOLS = 1

100 ' Create WINDOWS Table WINTAB()
WindowBLD:
    ENV.SDF = CONFIG.SDF: OKAY = -1
    CALL DataINIT("WINDOWS"): IF NOT OKAY THEN 900
    INPUT #5, WINLVLMAX, WINMAX
    DIM WINTAB(WINLVLMAX) AS WINPARMS, WINDOWS(WINMAX) AS WINDATA
    X = 0
WindowNEXT:
    X = X + 1
    INPUT #5, LOC$, ULR, ULC, LRR, LRC, BC, BG
    WINDOWS(X).LOC = LOC$
    WINDOWS(X).ULR = ULR: WINDOWS(X).ULC = ULC
    WINDOWS(X).LRR = LRR: WINDOWS(X).LRC = LRC
    WINDOWS(X).BDRYCOL = BC
    WINDOWS(X).BGCOLOR = BG
    IF X < WINMAX THEN GOTO WindowNEXT
    ENV.WINMSG = WINMAX

200 ' Create TABLES Tables
TablesBLD:
    ENV.TDF = CONFIG.TDF
    CALL TabINIT
    IF NOT OKAY THEN 900

300 ' Build MDFIndex(), SDFIndex()
    CALL DataINIT("GROUPS"): IF NOT OKAY THEN 900
    INPUT #5, GRPMAX
    DIM MDFIndex(GRPMAX) AS GroupPARMS, SDFIndex(GRPMAX) AS GroupPARMS
    FOR X = 1 TO GRPMAX
       INPUT #5, GROUP$
       MDFIndex(X).NAME = LEFT$(GROUP$, 4)
       SDFIndex(X).NAME = LEFT$(GROUP$, 4)
    NEXT X
    CALL MsgGrpLOAD("INITIAL", 0)
    IF NOT OKAY THEN 900
    CALL FmtGrpLOAD("INITIAL", 0)
    IF NOT OKAY THEN 900

400 ' Build RDFIndex()
    CALL DataINIT("REPORTS"): IF NOT OKAY THEN 900
    INPUT #5, RPTMAX
    REDIM RDFIndex(RPTMAX) AS ReportINDEX, RDFReports(RPTMAX) AS ReportDefREC
    REDIM RPTOPTS(RPTMAX) AS RptOPTIONS, PagePARMS(RPTMAX) AS PagePARMS
    REDIM RPTOPT$(0), OPTCHN(0) AS ChainPTRS
    REDIM RMONTB$(0), RGENDR$(0), RRELCD$(0)
    OPTTable.TABNAME = "OPTIONS": OPTTable.FMTNAME = "XXXXO005"
    OPTTable.KEYNAME = "KEY"
    OPTTable.XL = 37: OPTTable.ML = OPTTable.XL
    FOR X = 1 TO RPTMAX
       INPUT #5, REPORT$
       RDFIndex(X).CODE = LEFT$(REPORT$, 4)
    NEXT X
    CALL RptLOAD("INITIAL")

500 ' Format Display and Branch to Main Menu
    CLOSE : ON ERROR GOTO 0
    CALL ScrnCLR
    CALL WinOPEN("FS")
    CALL FmtFIND("INITS010")
    CALL WinFORMAT(0)
    COLOR FG(1), BG(1)
    BT! = TIMER: TW = 5
    WHILE TIMER - BT! < TW
      IF INKEY$ <> "" THEN BT! = TIMER - TW
    WEND
    CALL PgmPREP("FHSMENU"): IF NOT OKAY THEN SYSTEM
    CHAIN "FHSMENU"

900 PRINT "ERROR...Unable to Continue"
    END

REM $DYNAMIC
SUB GetCONFIG (CFGNAME$)
SHARED ATR()
   X$ = " ": REDIM CFGAL$(5)
   ON LOCAL ERROR GOTO 90
   OPEN CFGNAME$ + ".CFG" FOR INPUT AS #1
   CLOSE #1
   OPEN CFGNAME$ + ".CFG" FOR BINARY ACCESS READ AS #1
   GET #1, 1, CONFIG
   IF ((CONFIG.CFG = CFGNAME$) OR (CONFIG.CFG = "FHSCONFG")) AND (CONFIG.VER = 1) THEN
      CONFIG.CFG = CFGNAME$
      IF ASC(CONFIG.VCMD) = 0 THEN CONFIG.VCMD = "EDIT"
      FOR X = 1 TO 5
         GET #1, , X$
         L = ASC(X$)
         IF L > 0 THEN
            CFGAL$(X) = STRING$(L, 32)
            GET #1, , CFGAL$(X)
         END IF
      NEXT X
      IF CONFIG.SCOLORS = STRING$(12, 0) THEN GOTO INITATR
      FOR I = 0 TO 11
          SATTR = ASC(MID$(CONFIG.SCOLORS, I + 1, 1))
          FG(I) = FNFG(SATTR): BG(I) = FNBG(SATTR):
      NEXT I
      GOTO 50
   END IF
   ' Initialise CONFIG Values if File not found
   CONFIG.CFG = "INVALID"
INITCFG:
   CONFIG.FDF = "FHSFILES": CONFIG.PDF = "FHSPRINT"
   CONFIG.EDA = "Y": CONFIG.DFM = "1"
   CONFIG.TDF = "FHS"
   CONFIG.SDF = CONFIG.TDF: CONFIG.MDF = CONFIG.TDF: CONFIG.RDF = CONFIG.TDF
   CONFIG.VCMD = "EDIT"
   CONFIG.BP = 63: CONFIG.DUR = 1
INITATR:
   FOR I = 0 TO 11
       MID$(CONFIG.SCOLORS, I + 1, 1) = CHR$(ATR(I))
   NEXT I
50 CLOSE
   IF CONFIG.BP = 0 THEN CONFIG.BP = 63
   BP = CONFIG.BP: DUR = CONFIG.DUR
   EXIT SUB
90 CONFIG.CFG = "NOTFOUND"
   RESUME INITCFG
END SUB

REM $STATIC
SUB GetFileDEF
    OKAY = 0
    FSUTable.TABNAME = "FSETUPS"
    FSUTable.XL = 38: FSUTable.ML = 38
    FSUTable.KEYNAME = "KEY": FSUTable.KO = 1: FSUTable.KL = 8
    ON LOCAL ERROR GOTO GFDNOFDF
GFDOPEN:
    OPEN CONFIG.FDF + ".FDF" FOR INPUT AS #1
    CLOSE
    OPEN CONFIG.FDF + ".FDF" FOR BINARY ACCESS READ AS #1
    GET #1, , FDFHdr
    IF (FDFHdr.FTYPE <> "FDF") OR (FDFHdr.VER <> CHR$(0)) THEN GOTO GFDINIT
    CLOSE
    CALL FDFOpen("INIT")
    GOTO GFDEXIT
GFDNOFDF:
    IF (CONFIG.FDF <> ENV.FDF) THEN CONFIG.FDF = ENV.FDF: RESUME GFDOPEN
    IF (CONFIG.FDF <> "FHSFILES") THEN CONFIG.FDF = "FHSFILES": RESUME GFDOPEN
    RESUME GFDINIT
GFDINIT:
    FDFHdr.FTYPE = "XXX"
    FDFHdr.VER = CHR$(255)
    FDFHdr.SETUPS = 1
    FDFHdr.FAMDSN = 4
    FDFHdr.OTHERDSN = 10
    FDFHdr.DEFAULT = 1
    FDFHdr.EOFRBA = 0
    LSET FDFSetup.NAME = "DEFAULT"
    LSET FDFSetup.DESC = "FHS Default Values"
    LSET FDFSetup.FAMDIR = "": LSET FDFSetup.WRKDIR = ""
    LSET FDFSetup.TRANDIR = "": LSET FDFSetup.RPTDIR = ""
    FSUTable.FT = 1: FSUTable.LT = FDFHdr.SETUPS
    FSUTable.FF = FDFHdr.SETUPS + 1
    FSUMAX = FDFHdr.SETUPS + 5
    FSUTable.SIZE = FSUMAX
    REDIM FDFSURBA(FSUMAX), FSETUP$(FSUMAX), FSUCHN(FSUMAX) AS ChainPTRS
    CALL ChnINIT(FSUCHN(), 1, FSUMAX)
    FSUCHN(1).FWD = 0: FSUCHN(2).BWD = 0
    FSETUP$(1) = SPACE$(FSUTable.ML)
    LSET FSETUP$(1) = FDFSetup.NAME + FDFSetup.DESC
    ENV.FSETUP = FDFHdr.DEFAULT
    OKAY = -1
GFDEXIT:
    CLOSE
END SUB

SUB GetPrintDEF
    OKAY = 0
    PSUTable.TABNAME = "PSETUPS"
    PSUTable.XL = 33: PSUTable.ML = 33
    PSUTable.KEYNAME = "KEY": PSUTable.KO = 1: PSUTable.KL = 8
    ON LOCAL ERROR GOTO GPDNOPDF
GPDOPEN:
    OPEN CONFIG.PDF + ".PDF" FOR INPUT AS #1
    CLOSE
    OPEN CONFIG.PDF + ".PDF" FOR BINARY ACCESS READ AS #1
    GET #1, , PDFHdr
    IF (PDFHdr.FTYPE <> "PDF") OR (PDFHdr.VER <> CHR$(0)) THEN GOTO GPDINIT
    CLOSE
    CALL PDFOpen("INIT")
    GOTO GPDEXIT
GPDNOPDF:
    IF (CONFIG.PDF <> ENV.PDF) THEN CONFIG.PDF = ENV.PDF: RESUME GPDOPEN
    IF (CONFIG.PDF <> "FHSPRINT") THEN CONFIG.PDF = "FHSPRINT": RESUME GPDOPEN
    RESUME GPDINIT
GPDINIT:
    PDFHdr.FTYPE = "XXX"
    PDFHdr.VER = CHR$(255)
    PDFHdr.SETUPS = 1
    PDFHdr.PRINTERS = 1
    PDFHdr.CODES = 1
    PDFHdr.SYMBOLS = 1
    PDFHdr.FORMS = 1
    PDFHdr.DEFAULT = 1
    PDFHdr.EOFRBA = 0
    PDFSetup.NAME = "FHSINIT"
    PDFSetup.DESC = "FHS Default Values"
    PDFSetup.DEST = "LPT1:"
    PDFSetup.PRINTER = "DEFAULT"
    PDFSetup.FORMS = " ": PDFSetup.CODES = " ": PDFSetup.SYMBOLS = " "
    PSUTable.TABNAME = "PSETUPS"
    PSUTable.FMTNAME = "XXXXS021"
    PSUTable.FMTNUM = 0
    PSUTable.XL = 33: PSUTable.ML = 33
    PSUTable.KO = 1: PSUTable.KL = 8
    PSUTable.FT = 1: PSUTable.LT = PDFHdr.SETUPS
    PSUTable.FF = 0
    PSUMAX = 1
    PSUTable.SIZE = 1
    REDIM PSETUP$(1), PSUCHN(1) AS ChainPTRS
    PSETUP$(1) = SPACE$(PSUTable.ML)
    LSET PSETUP$(1) = PDFSetup.NAME + PDFSetup.DESC
    ENV.PSETUP = 1
    OKAY = -1
GPDEXIT:
    CLOSE
END SUB

