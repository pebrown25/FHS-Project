DECLARE SUB SaveCONFIG (XCONFIG$)
DECLARE SUB UPDTColor ()
1  REM $INCLUDE: 'FHSCOMON.BAS'
   PN$ = " FAMILY HISTORY SYSTEM - FHSCUST - Customization program"
   CY$ = " (C) Copyright 1995 by Phillip E. Brown"
   IF CONFIG.BP = 0 THEN RUN "FHSINIT"
   FUN = 0
   FMTNAME$ = SPACE$(8): PGMNAME$ = SPACE$(7)
   DEF FNFG (SATTR) = (SATTR AND 15) - 16 * (SATTR > 127)
   DEF FNBG (SATTR) = ((SATTR \ 16) AND 7)
   DEF FNATR (FG, BG) = (FG AND 15) + 16 * BG + 128 * (FG \ 16)
   DIM XDTFMT$(4)
   DTFMT$(1) = "MM-DD-YYYY"
   DTFMT$(2) = "DD.MM.YYYY"
   DTFMT$(3) = "YYYY.MM.DD"
   DTFMT$(4) = "INVALID"
   CALL TableLOAD("DATEFMT", T, 13)
   IF OKAY THEN
      X = TABLE(T).FT
      WHILE X > 0
        X$ = MID$(TABDATA$(X), 1, 3)
        SELECT CASE X$
           CASE "MDY": DTFMT$(1) = RTRIM$(MID$(TABDATA$(X), 4, 10))
           CASE "DMY": DTFMT$(2) = RTRIM$(MID$(TABDATA$(X), 4, 10))
           CASE "YMD": DTFMT$(3) = RTRIM$(MID$(TABDATA$(X), 4, 10))
           CASE "INV": DTFMT$(4) = RTRIM$(MID$(TABDATA$(X), 4, 10))
        END SELECT
        X = TABDATACHN(X).FWD
      WEND
      CALL TableFREE("DATEFMT")
   END IF
40 ' Format Display
   CALL FmtFIND("CUSTS010"): CALL WinBDRY(WIN.BDRYCOL, 0)
   IF FUN < 58 THEN CALL WinCLR
   CALL WinFORMAT(0): W = WIN.WNUM
   CALL FmtFindFLD("LRC"): WINDOWS(0).LRR = FLIN: WINDOWS(0).LRC = BCOL
   CALL FmtFindFLD("ULC1"): WINDOWS(0).ULR = FLIN: WINDOWS(0).ULC = BCOL
   WIN.WNUM = 0: CALL WinBDRY(0, 0): WIN.WNUM = W
   CALL FmtFindFLD("ULC2"): WINDOWS(0).ULR = FLIN: WINDOWS(0).ULC = BCOL
   WIN.WNUM = 0: CALL WinBDRY(-1, 0): WIN.WNUM = W
45 ' Format Data Fields
   LSET FMTNAME$ = "CUSTS011": GOSUB 50
   LSET FMTNAME$ = "CUSTS012": GOSUB 50
   LSET FMTNAME$ = "CUSTS013": GOSUB 50
   GOTO 200
50 CALL FmtFIND(FMTNAME$)
   XFLD = FMT.BGNFLD
   WHILE XFLD > 0
      FFLD = FLDTAB(XFLD)
      XTXT = FFLD.UTXT
      SELECT CASE FFLD.NAME
        CASE "CFG ": LSET UTXT$(XTXT) = CONFIG.CFG
        CASE "FAM ": LSET UTXT$(XTXT) = CONFIG.FDF
        CASE "PRT ": LSET UTXT$(XTXT) = CONFIG.PDF
        CASE "DFM ": LSET UTXT$(XTXT) = CONFIG.DFM
        CASE "DFL ": SELECT CASE CONFIG.DFM
                     CASE "1": LSET DTXT$(XFLD) = DTFMT$(1)
                     CASE "2": LSET DTXT$(XFLD) = DTFNT$(2)
                     CASE "3": LSET DTXT$(XFLD) = DTFMT$(3)
                     CASE ELSE: LSET DTXT$(XFLD) = DTFMT$(4)
                     END SELECT
        CASE "CMD ": LSET UTXT$(XTXT) = CONFIG.VCMD
        CASE "TDF ": LSET UTXT$(XTXT) = CONFIG.TDF
        CASE "SDF ": LSET UTXT$(XTXT) = CONFIG.SDF
        CASE "MDF ": LSET UTXT$(XTXT) = CONFIG.MDF
        CASE "RDF ": LSET UTXT$(XTXT) = CONFIG.RDF
        CASE "AL1 ": LSET UTXT$(XTXT) = CFGAL$(1)
        CASE "AL2 ": LSET UTXT$(XTXT) = CFGAL$(2)
        CASE "AL3 ": LSET UTXT$(XTXT) = CFGAL$(3)
        CASE "AL4 ": LSET UTXT$(XTXT) = CFGAL$(4)
        CASE "AL5 ": LSET UTXT$(XTXT) = CFGAL$(5)
      END SELECT
      XFLD = FLDCHN(XFLD).FWD
    WEND
    CALL WinFORMAT(0)
    RETURN
200 ' Get Processing Option
    CALL PutMSG(" ")
    CALL FmtFIND("CUSTS010"): WIN.OFMT = CURFMT
    IF FUN < 58 THEN 250
    CALL OPTHilite(FUN$, FUN$, 1)
250 CALL GetKEY: FUN = A
    IF LEN(A$) < 2 THEN CALL ErrBEEP(0): FUN = 0: GOTO 200
    IF (FUN < 58) OR (FUN > 63 AND FUN < 66) OR FUN > 67 THEN
       CALL ErrBEEP(0): FUN = 0: GOTO 200
    END IF
    FUN$ = "F" + CHR$(FUN - 10)
    CALL OPTHilite(FUN$, FUN$, 6)
    COLOR FG(1), BG(1)
    IF FUN = 67 THEN 1000
    IF FUN = 66 THEN CALL DOSShell: GOTO 40
    ON FUN - 58 GOTO 300, 500, 255, 400, 404
255 ' Update Screen Colors & Error Tone
    REDIM ATRM(11), ATRC1(11), ATRC2(11)
    RESTORE 10100
    FOR X = 0 TO 11: READ ATRM(X): NEXT X
    FOR X = 0 TO 11: READ ATRC1(X): NEXT X
    FOR X = 0 TO 11: READ ATRC2(X): NEXT X
    CALL UPDTColor
    GOTO 40
300 ' Update Configuration Parms
    LSET FMTNAME$ = "CUSTS011": GOTO 600
400 ' Update Language File Prefixes
    CALL PutMSG("CUSTM002")
    IF A = 27 THEN GOTO 200
    IF (A$ < "1") OR (A$ > "3") THEN CALL ErrBEEP(0): GOTO 400
    ON VAL(A$) GOTO 401, 402, 403
401 LSET PGMNAME$ = "FHSTABL": GOTO 2000
402 LSET PGMNAME$ = "FHSSFMT": GOTO 2000
403 LSET PGMNAME$ = "FHSMSGS": GOTO 2000
404 LSET PGMNAME$ = "FHSRPTS": GOTO 2000
500 ' Update Name and Address Information
    LSET FMTNAME$ = "CUSTS013"
600 ' Process UPDATE Request
    CALL PutMSG("XXXXM012")
    CALL FmtFIND(FMTNAME$): CALL FmtUHOLD: CALL WinUPDATE
    IF A = 27 THEN CALL FmtHREST: CALL WinFORMAT(0): GOTO 200
    XFLD = FMT.BGNFLD
    WHILE XFLD > 0
      FFLD = FLDTAB(XFLD)
      XTXT = FFLD.UTXT: FLDTAB(XFLD).DO = 0
      SELECT CASE FFLD.NAME
        CASE "CFG ": CONFIG.CFG = UTXT$(XTXT)
        CASE "FAM ": CONFIG.FDF = UTXT$(XTXT)
        CASE "PRT ": CONFIG.PDF = UTXT$(XTXT)
        CASE "DFM ": CONFIG.DFM = UTXT$(XTXT)
        CASE "DFL ": SELECT CASE CONFIG.DFM
                     CASE "1": LSET DTXT$(XFLD) = "MM-DD-YYYY"
                     CASE "2": LSET DTXT$(XFLD) = "DD.MM.YYYY"
                     CASE "3": LSET DTXT$(XFLD) = "YYYY.MM.DD"
                     CASE ELSE: LSET DTXT$(XFLD) = "INVALID"
                     END SELECT
        CASE "CMD ": CONFIG.VCMD = UTXT$(XTXT)
        CASE "AL1 ": CFGAL$(1) = LTRIM$(RTRIM$(UTXT$(XTXT)))
        CASE "AL2 ": CFGAL$(2) = LTRIM$(RTRIM$(UTXT$(XTXT)))
        CASE "AL3 ": CFGAL$(3) = LTRIM$(RTRIM$(UTXT$(XTXT)))
        CASE "AL4 ": CFGAL$(4) = LTRIM$(RTRIM$(UTXT$(XTXT)))
        CASE "AL5 ": CFGAL$(5) = LTRIM$(RTRIM$(UTXT$(XTXT)))
      END SELECT
      XFLD = FLDCHN(XFLD).FWD
    WEND
650 CALL WinFORMAT(0)
    CONFIG.VER = -1: IF FUN > 0 THEN GOTO 200 ELSE GOTO 40

1000 ' Return to FAMMENU.BAS
     A = VAL(CONFIG.DFM): IF (A < 1) OR (A > 3) THEN CONFIG.DFM = "1"
     IF NOT (CONFIG.VER < 0) THEN 1010
     HCONFIG$ = CONFIG.CFG
     IF (HCONFIG$ = "INVALID ") OR (HCONFIG$ = "NOTFOUND") THEN HCONFIG$ = "FHSCONFG"
     LSET SYSVAR.MVAR = HCONFIG$
1005 CALL PutMSG("CUSTM001"): IF ASC(A$) = 27 THEN 200
     IF A$ = SNGLKEY$(2) THEN 1010
     IF A$ <> SNGLKEY$(1) THEN CALL ErrBEEP(0): GOTO 1005
     CALL SaveCONFIG(HCONFIG$)
1010 CALL PutMSG("")
     CLOSE
     LSET PGMNAME$ = "FHSMENU"
2000 ' Chain TO Next Program
     CALL PgmPREP(PGMNAME$)
     IF (NOT OKAY) OR (A = 27) THEN GOTO 200
     CHAIN PGMNAME$

10100 ' Default MONO, COLOR1, COLOR2 Screen Color Tables
DATA 0,7,14,10,12,112,11,105,57,73,4,14
DATA 0,7,3,2,5,48,14,11,10,13,4,14
DATA 0,113,123,122,127,18,126,123,122,127,116,122

REM $DYNAMIC
SUB SaveCONFIG (XCONFIG$)
     OPEN XCONFIG$ + ".CFG" FOR BINARY ACCESS WRITE AS #1
     CONFIG.VER = 1: CONFIG.CFG = "FHSCONFG"
     PUT #1, 1, CONFIG
     FOR X = 1 TO 5
         L = LEN(CFGAL$(X))
         X$ = CHR$(L) + CFGAL$(X)
         PUT #1, , X$
     NEXT X
     CONFIG.CFG = XCONFIG$: CONFIG.VER = 0
     CLOSE #1
END SUB

SUB UPDTColor
SHARED ATRM(), ATRC1(), ATRC2()
    NULATR = FNATR(FG(1), BG(1))
    DIM ATR(11)
    FOR I = 0 TO 11: ATR(I) = FNATR(FG(I), BG(I)): NEXT I
    CALL FmtFIND("CUSTS020"): FMT020 = CURFMT
    CALL FmtFindFLD("ATR1"): ALIN = FLIN: ACOL = BCOL - 2
    CALL FmtFindFLD("FGCO"): FGLL = FLIN: FGCC = BCOL
    CALL FmtFindFLD("BGCO"): BGLL = FLIN: BGCC = BCOL
    CALL FmtFindFLD("BLKY"): BLKLL = FLIN: BLKCC = BCOL
    BlinkYN$ = SNGLKEY$(1) + " " + SNGLKEY$(2)
    CALL FmtFIND("CUSTS091"): FMT091 = CURFMT
    CALL FmtFIND("CUSTS092"): FMT092 = CURFMT
10  ' Format Screen
    CALL WinCLR: CALL PutMSG(""): CALL WinFORMAT(FMT020)
    BPE = 5: WHILE ((2 ^ BPE) - 1) < BP: BPE = BPE + 1: WEND
60  CALL OptDISPLAY(FMT091)
    COLOR FG(9), BG(9): CURFMT = FMT020: FMT = FMTTAB(CURFMT)
    CALL FmtFindFLD("FREQ"): RSET UTXT$(FFLD.UTXT) = LTRIM$(STR$(BP))
    CALL FmtFindFLD("DUR"): RSET UTXT$(FFLD.UTXT) = LTRIM$(STR$(DUR))
    CALL WinDisplayDATA(0)
    FOR I = 1 TO 11
        LOCATE I + ALIN - 1, BCOL, 0: SATTR = ATR(I): GOSUB 1935
        XLIN = I + ALIN - 1: GOSUB 1945
    NEXT I
    FOR I = 0 TO 15
        COLOR I, 0: LOCATE FGLL + 1, FGCC + 2 * I, 0
        PRINT CHR$(219);
    NEXT I
    FOR I = 0 TO 7
        COLOR 0, I: LOCATE BGLL + 1, BGCC + 2 * I, 0
        PRINT " ";
    NEXT I
    GOSUB C400
    XLIN = ALIN: GOSUB 1930: GOSUB 1920

270 ' Get User KEY
    CALL GetKEY: IF A$ = "" THEN 270
    A = ASC(RIGHT$(A$, 1))
    IF (A = 27) THEN 1700
    IF A = 28 THEN A = 77' for Tandy 2000
    IF A = 29 THEN A = 75' for Tandy 2000
    IF A = 30 THEN A = 72' for Tandy 2000
    IF A = 31 THEN A = 80' for Tandy 2000
    IF A = 72 THEN GOSUB C1150: GOTO 270
    IF A = 80 THEN GOSUB C1100: GOTO 270
    IF A = 59 THEN IF FGNDSLCT THEN GOSUB C500: GOTO 270:  ELSE GOSUB C400: GOTO 270
    IF A = 77 AND FGNDSLCT THEN GOSUB C1200: GOTO 270
    IF A = 77 AND BGNDSLCT THEN GOSUB C1300: GOTO 270
    IF A = 75 AND FGNDSLCT THEN GOSUB C1250: GOTO 270
    IF A = 75 AND BGNDSLCT THEN GOSUB C1350: GOTO 270
    IF A = 61 THEN GOSUB C1400: GOTO 270
    IF (A = 63 OR A = 64 OR A = 65 OR A = 109) THEN GOSUB C1600: GOTO 10
    IF A = 66 THEN GOSUB C2500: GOTO 10
310 CALL ErrBEEP(0): GOTO 270

C400: ' FGND select
    BGNDSLCT = 0: CURFMT = FMT020: FMT = FMTTAB(CURFMT)
    CALL FmtFindFLD("BGND")
    COLOR FG(1), BG(1): PRINT DTXT$(WIN.CURFLD);
    FGNDSLCT = -1: CALL FmtFindFLD("FGND")
    COLOR FG(6), BG(6): PRINT DTXT$(WIN.CURFLD);
    RETURN

C500: ' BGND select
    FGNDSLCT = 0: CURFMT = FMT020: FMT = FMTTAB(CURFMT)
    CALL FmtFindFLD("FGND")
    COLOR FG(1), BG(1): PRINT DTXT$(WIN.CURFLD);
    BGNDSLCT = -1: CALL FmtFindFLD("BGND")
    COLOR FG(6), BG(6): PRINT DTXT$(WIN.CURFLD);
    RETURN

C1100: 'F1 move ATTR arrow DOWN
    ATR(XLIN - 3) = SATTR
    GOSUB 1910: XLIN = XLIN + 1: IF XLIN > 14 THEN XLIN = 4
    GOSUB 1930: GOSUB 1920: RETURN

C1150: 'F2 move ATTR arrow UP
    ATR(XLIN - 3) = SATTR
    GOSUB 1910: XLIN = XLIN - 1: IF XLIN < 4 THEN XLIN = 14
    GOSUB 1930: GOSUB 1920: RETURN

C1200: 'F3 move FGND arrow RIGHT
    COLOR FG(1), BG(1): LOCATE FGLL + 2, FGCC + 2 * FGND, 0: PRINT " ";
    FGND = FGND + 1: IF FGND > 15 THEN FGND = 0
    GOTO 1265

C1250: 'F4 move FGND arrow LEFT
    COLOR FG(1), BG(1): LOCATE FGLL + 2, FGCC + 2 * FGND, 0: PRINT " ";
    FGND = FGND - 1: IF FGND < 0 THEN FGND = 15
1265 COLOR FG(6), BG(6): LOCATE FGLL + 2, FGCC + 2 * FGND, 0: PRINT CHR$(24);
    GOSUB 1940: RETURN

C1300: 'F5 move BGND arrow RIGHT
    COLOR FG(1), BG(1): LOCATE BGLL + 2, BGCC + 2 * BGND, 0: PRINT " ";
    BGND = BGND + 1: IF BGND > 7 THEN BGND = 0
    GOTO 1365

C1350: 'F6 move BGND arrow LEFT
    COLOR FG(1), BG(1): LOCATE BGLL + 2, BGCC + 2 * BGND, 0: PRINT " ";
    BGND = BGND - 1: IF BGND < 0 THEN BGND = 7
1365 COLOR FG(6), BG(6): LOCATE BGLL + 2, BGCC + 2 * BGND, 0: PRINT CHR$(24);
    GOSUB 1940: RETURN

C1400: 'F7 change BLINK
    COLOR FG(1), BG(1): LOCATE BLKLL, BLKCC, 0: PRINT BlinkYN$;
    BLINK = NOT BLINK
    IF BLINK THEN
       COLOR ((FG(6) AND 15) + 16), BG(6)
       LOCATE BLKLL, BLKCC, 0: PRINT SNGLKEY$(1);
       ELSE
       COLOR FG(6), BG(6)
       LOCATE BLKLL, BLKCC + 2, 0: PRINT SNGLKEY$(2);
    END IF
    GOSUB 1940: RETURN

C1600: ' LOAD DEFAULT SCRN ATTRIBUTES
    GOSUB 1910: FOR I = 1 TO 11: LOCATE ALIN + I, ACOL, 0: PRINT " "; : NEXT I
    IF A = 63 THEN FOR I = 0 TO 11: ATR(I) = ATRM(I): NEXT I: GOTO 1635
    IF A = 64 THEN FOR I = 0 TO 11: ATR(I) = ATRC1(I): NEXT I: GOTO 1635
    IF A = 109 THEN FOR I = 0 TO 11: ATR(I) = ATRC2(I): NEXT I: GOTO 1635
    FOR I = 0 TO 11: ATR(I) = ASC(MID$(CONFIG.SCOLORS, I + 1, 1)): NEXT I
    BP = CONFIG.BP: DUR = CONFIG.DUR
1635 FOR I = 0 TO 11
         FG(I) = FNFG(ATR(I)): BG(I) = FNBG(ATR(I))
         LOCATE I + ALIN, ACOL, 0
         SATTR = ATR(I): GOSUB 1935
         XLIN = I + ALIN: GOSUB 1945
    NEXT I
    CALL WinBDRY(0, 0)
    RETURN

1700 ' Return to MAIN Customization Menu
     ATR(XLIN - 3) = SATTR
     ATRCHG = (BP <> CONFIG.BP) OR (DUR <> CONFIG.DUR)
     FOR I = 0 TO 11
         FG(I) = FNFG(ATR(I)): BG(I) = FNBG(ATR(I))
         IF ATR(I) <> ASC(MID$(CONFIG.SCOLORS, I + 1, 1)) THEN ATRCHG = -1
     NEXT I
     IF ATRCHG THEN
        CALL PutMSG("CUSTM005")
        IF A$ = CHR$(27) THEN 10
        IF A$ = SNGLKEY$(1) THEN
           CONFIG.VER = -1
           CONFIG.BP = BP: CONFIG.DUR = DUR
           FOR I = 0 TO 11
               MID$(CONFIG.SCOLORS, I + 1, 1) = CHR$(ATR(I))
           NEXT I
        END IF
     END IF
     CALL WinCLR
     EXIT SUB

1910 'TURN OFF ARROWS
     COLOR FG(1), BG(1): LOCATE XLIN, 4, 0: PRINT " ";
     LOCATE FGLL + 2, FGCC + 2 * FGND, 0: PRINT " ";
     LOCATE BGLL + 2, BGCC + 2 * BGND, 0: PRINT " ";
     LOCATE BLKLL, BLKCC, 0: PRINT BlinkYN$;
     RETURN

1920 'TURN ON ARROWS
     COLOR FG(6), BG(6)
     LOCATE XLIN, 4, 0: PRINT CHR$(26);
     LOCATE FGLL + 2, FGCC + 2 * FGND, 0: PRINT CHR$(24);
     LOCATE BGLL + 2, BGCC + 2 * BGND, 0: PRINT CHR$(24);
     IF BLINK THEN
        COLOR ((FG(6) AND 15) + 16), BG(6)
        LOCATE BLKLL, BLKCC, 0: PRINT SNGLKEY$(1);
        ELSE
        LOCATE BLKLL, BLKCC + 2, 0: PRINT SNGLKEY$(2);
     END IF
     RETURN

1930 'DETERMINE FGND,BGND,BLINK
     SATTR = SCREEN(XLIN, 5, 1)
1935 FGND = SATTR MOD 16: BGND = INT((SATTR MOD 128) / 16)
     BLINK = (SATTR > 127)
     RETURN

1940 'DETERMINE SATTR FROM FGND,BGND,BLINK
     SATTR = FGND - BLINK * 128 + 16 * BGND
1945 COLOR FGND - BLINK * 16, BGND
     LOCATE XLIN, 5, 0: PRINT "X";
     RETURN

C2500: ' Process TONE adjustments
     CALL OptDISPLAY(FMT092): COLOR FG(9), BG(9)
     CURFMT = FMT020: FMT = FMTTAB(CURFMT)
2515 CALL GetKEY: IF A$ = "" THEN 2515
     A = ASC(RIGHT$(A$, 1))
     IF A = 27 OR A = 13 OR A = 67 THEN RETURN
     IF A < 59 OR A > 62 THEN CALL ErrBEEP(0): GOTO 2515
     BPE = BPE + (A = 59) - (A = 60)
     IF BPE > 15 THEN BPE = 5 ELSE IF BPE < 5 THEN BPE = 15
     BP = 2 ^ BPE - 1: IF BP < 37 THEN BP = 37
     DUR = DUR + (A = 61) - (A = 62)
     IF DUR > 5 THEN DUR = 0 ELSE IF DUR < 0 THEN DUR = 5
     CALL FmtFindFLD("FREQ"): RSET UTXT$(FFLD.UTXT) = LTRIM$(STR$(BP))
     CALL FmtFindFLD("DUR"): RSET UTXT$(FFLD.UTXT) = LTRIM$(STR$(DUR))
     CALL WinDisplayDATA(0)
     GOTO 2515

END SUB

